_BASE_: [
  '../datasets/voc.yml',
  '../runtime.yml',
  # './_base_/optimizer_80e.yml',
  './_base_/ppyoloe_plus_crn.yml',
  # './_base_/ppyoloe_plus_reader.yml',
]

log_iter: 100
snapshot_epoch: 1
weights: output/ppyoloe_plus_crn_m_custom/model_final

pretrain_weights: https://bj.bcebos.com/v1/paddledet/models/pretrained/ppyoloe_crn_m_obj365_pretrained.pdparams
depth_mult: 0.67
width_mult: 0.75

epoch: 200

LearningRate:
  base_lr: 0.002
  schedulers:
    - name: CosineDecay
      max_epochs: 200
    - name: LinearWarmup
      start_factor: 0.
      epochs: 5

OptimizerBuilder:
  optimizer:
    momentum: 0.9
    type: Momentum
  regularizer:
    factor: 0.0005
    type: L2

log_iter: 10
snapshot_epoch: 1

metric: VOC
num_classes: 4

# Use Custom Dataset
TrainDataset:
  !VOCDataSet
    dataset_dir: dataset/disease/
    anno_path: train.txt
    label_list: label_list.txt
    data_fields: ['image', 'gt_bbox', 'gt_class', 'difficult']


EvalDataset:
  !VOCDataSet
    dataset_dir: dataset/disease/
    anno_path: test.txt
    label_list: label_list.txt
    data_fields: ['image', 'gt_bbox', 'gt_class', 'difficult']

TestDataset:
  !ImageFolder
    anno_path: dataset/disease/label_list.txt


worker_num: 8
eval_height: &eval_height 512
eval_width: &eval_width 512
eval_size: &eval_size [*eval_height, *eval_width]

TrainReader:
  sample_transforms:
    - Decode: {}
    # - RandomDistort: {}
    - RandomExpand: {fill_value: [123.675, 116.28, 103.53]}
    - RandomCrop: {}
    - RandomFlip: {}
  batch_transforms:
    - BatchRandomResize: {target_size: [384, 416, 480, 512, 608, 672, 704], random_size: True, random_interp: True, keep_ratio: False}
    - NormalizeImage: {mean: [0., 0., 0.], std: [1., 1., 1.], norm_type: none}
    - Permute: {}
    - PadGT: {}
  batch_size: 48
  shuffle: true
  drop_last: true
  use_shared_memory: true
  collate_batch: true

EvalReader:
  sample_transforms:
    - Decode: {}
    - Resize: {target_size: *eval_size, keep_ratio: False, interp: 2}
    - NormalizeImage: {mean: [0., 0., 0.], std: [1., 1., 1.], norm_type: none}
    - Permute: {}
  batch_size: 32

TestReader:
  inputs_def:
    image_shape: [3, *eval_height, *eval_width]
  sample_transforms:
    - Decode: {}
    - Resize: {target_size: *eval_size, keep_ratio: False, interp: 2}
    - NormalizeImage: {mean: [0., 0., 0.], std: [1., 1., 1.], norm_type: none}
    - Permute: {}
  batch_size: 1
